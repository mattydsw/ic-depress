<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>215</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>510</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>142</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>336</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>440</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>628</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>579</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>530</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>525</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>238</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>544</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>132</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>635</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>220</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>394</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>186</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>512</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>433</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>375</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>190</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>522</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>199</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>429</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>168</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>462</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>455</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>867</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>144</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>169</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>450</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>26</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>599</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>494</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>151</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>240</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>490</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>609</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>181</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>573</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>117</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>403</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>216</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>192</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>564</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>424</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>502</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>288</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>180</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>578</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>232</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>465</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>238</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>172</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>376</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>604</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>411</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>233</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>427</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>318</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>598</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>253</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>428</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>413</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>416</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>294</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>370</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>151</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>475</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>617</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>196</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>248</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>580</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>251</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>517</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>483</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>120</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>283</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>273</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>585</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>202</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>247</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>252</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>271</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>457</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>159</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>566</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>442</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>568</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>574</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>734</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>340</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>234</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>633</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>505</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>262</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>210</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>374</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>250</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>298</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>426</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>264</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>646</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>349</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>497</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>536</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>590</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>129</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>612</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>220</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>620</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>276</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>208</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>344</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>292</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>632</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>452</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>445</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>521</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>638</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>556</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>430</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>217</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>464</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>496</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>324</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>549</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>587</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>523</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>480</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>213</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>346</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>456</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>533</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>460</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>186</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>285</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>392</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>155</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>332</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>266</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>187</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>606</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>282</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>473</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>269</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>476</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>104</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>605</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>524</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>639</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>435</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>468</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>272</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>546</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>516</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>581</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>308</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>303</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>176</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>436</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>286</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>626</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>362</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>571</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>291</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>405</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>382</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>441</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>621</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>760</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>146</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>200</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>575</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1650</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>373</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>543</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>595</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>191</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>214</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>644</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>257</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>149</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>176</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>194</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>277</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>616</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>100</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>229</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>234</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>181</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>603</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>152</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>446</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>570</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>532</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>608</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>210</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>381</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>607</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>842</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>477</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>322</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>642</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>233</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>131</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>534</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>359</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>553</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>489</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>569</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>422</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>126</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>641</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>439</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>377</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>284</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>504</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1030</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>175</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>485</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>240</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>559</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>407</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>227</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>619</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>200</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>141</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>207</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>577</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>472</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>263</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>205</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>418</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>396</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>554</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>498</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>627</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>146</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>613</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>169</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>297</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testProblemDimensionTooSmall(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>132</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>630</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>209</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>469</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>515</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>236</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>245</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>431</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>278</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testProblemDimensionTooSmall(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>417</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>280</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>589</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>231</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>291</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>537</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>390</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>454</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>386</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>300</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>130</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>275</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>218</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>215</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>270</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>261</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>539</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>281</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>645</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>643</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>160</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>279</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>511</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>482</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>179</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>486</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>560</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>177</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>586</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>294</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>397</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>406</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>567</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>481</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>535</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>634</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>136</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>636</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>274</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>188</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>443</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>637</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>503</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>169</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>290</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>228</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>140</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>345</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>623</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>166</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>647</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>205</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1042</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>173</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>828</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>499</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>197</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>352</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>125</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>593</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>191</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>212</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>562</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>471</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>548</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>206</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>866</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>341</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>506</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>361</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>470</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>190</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>547</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>279</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>264</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>158</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>444</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>629</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>447</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>404</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>299</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>231</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>259</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>529</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>527</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>513</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>415</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>398</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>592</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>528</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>555</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>180</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>caller</mutatedMethod><lineNumber>2435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>305</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>526</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>412</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>474</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>449</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>508</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>213</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>507</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>425</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>260</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>602</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>625</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>501</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>519</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>495</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>293</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>611</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>212</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>588</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>509</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>338</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>594</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>640</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>550</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>217</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>584</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>116</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>197</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>500</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>492</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>138</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>191</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>610</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>410</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>162</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>600</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>343</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>597</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>188</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>242</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>563</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>157</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>541</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>389</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>160</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>148</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>329</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>870</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>226</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>484</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>552</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>840</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>295</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>558</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>458</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>317</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>466</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>582</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>572</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>583</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>614</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>196</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>631</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>391</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>438</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>228</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>296</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>202</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>437</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>420</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>448</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1898</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>226</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>112</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>542</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>211</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>538</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>193</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>388</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1046</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>514</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>383</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>576</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>372</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>520</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>401</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>254</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>972</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>190</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>463</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>622</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>211</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>461</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>296</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>258</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>601</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>395</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>487</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>453</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>459</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>557</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>408</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>212</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>106</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>268</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>265</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>301</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>491</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>531</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>451</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>195</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>478</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>518</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>243</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>479</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>561</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>493</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>207</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>242</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>206</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>128</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>540</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>618</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>591</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>596</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>393</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>256</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>185</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>239</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>624</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>409</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>545</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>165</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>565</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>260</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>266</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>488</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>339</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>589</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>113</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>116</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>369</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>615</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>841</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>402</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>267</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2006</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>551</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>168</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>467</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>295</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>288</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>383</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>369</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>199</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2015</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>247</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>213</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>433</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>643</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>612</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>581</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>261</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1008</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>642</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>94</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>427</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>412</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>195</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testProblemDimensionTooSmall(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>234</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>530</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>609</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>615</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>242</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>584</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>597</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>352</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>599</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>197</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>176</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>398</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>440</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>570</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>415</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>426</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>245</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>202</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>490</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>395</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>436</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>339</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>514</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>332</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>521</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>293</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>488</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>461</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>250</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>294</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>559</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>182</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>473</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>169</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>646</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>296</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>324</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>180</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>181</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>538</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>417</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>418</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>299</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>484</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>126</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>446</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>232</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1071</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>175</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>697</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>226</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>305</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>524</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>459</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>442</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>455</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>635</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>175</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>180</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>486</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>318</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>303</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>610</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>443</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>194</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>296</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>264</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>577</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>217</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>551</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>566</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>104</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>425</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>26</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>132</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>550</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>151</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>152</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>212</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>188</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>341</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>444</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>375</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>429</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>479</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>257</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>146</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>627</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>252</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>149</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>435</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>625</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>548</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>233</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>640</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>493</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>614</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>286</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>317</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>172</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>190</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>100</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>238</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>507</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>409</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>574</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>396</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1071</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>239</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1899</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>603</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>569</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>193</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>556</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>277</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>563</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>481</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>169</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>190</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>503</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>208</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>402</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>266</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>298</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>495</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>596</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>213</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2015</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>199</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>340</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>128</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>220</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>480</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>639</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>151</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>591</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>392</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>620</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>501</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>641</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>142</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>238</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>281</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>633</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1038</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>148</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>618</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>373</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2060</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>113</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>583</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>291</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>629</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>206</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>260</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>206</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>637</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>207</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>343</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>549</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>793</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>582</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>631</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>166</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>251</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>466</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>217</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>644</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>125</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>420</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>477</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>226</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>505</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>377</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>390</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>528</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>428</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>190</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>389</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>240</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>499</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>519</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>588</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>513</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>344</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>508</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>300</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>265</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>212</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>437</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>211</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>469</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>580</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>273</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>177</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>388</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>282</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>209</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>626</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>146</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>260</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>492</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1903</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>422</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>592</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>210</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>483</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>268</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>520</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>557</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>604</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>269</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>100</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>537</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>623</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>254</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>624</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>558</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>431</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2015</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>478</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>593</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>290</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>266</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>381</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>138</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>160</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>487</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>607</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>116</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>590</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>504</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>896</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>caller</mutatedMethod><lineNumber>2440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>552</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>554</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1933</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>454</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>616</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>279</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>263</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>470</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>200</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>441</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>291</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>218</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>216</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1005</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>589</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>372</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>617</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>359</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>472</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>394</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>207</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>462</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>512</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>489</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>128</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>349</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>506</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>562</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>600</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>228</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>497</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>523</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>191</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>191</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>168</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>86</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>628</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2085</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>498</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>413</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>157</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>168</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>210</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>522</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>534</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>191</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>131</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>401</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>526</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>621</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>517</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>622</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>141</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>601</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>187</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>129</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>500</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>475</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>598</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>585</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>406</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>159</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>158</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>163</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>535</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>476</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>181</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>573</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>169</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1040</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>267</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>136</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>510</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>276</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>270</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>301</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>112</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>397</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>120</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>547</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>571</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>545</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>196</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>602</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>162</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>636</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>458</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>160</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>192</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>234</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>546</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>452</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>403</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1051</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>527</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>256</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>87</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>196</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>439</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>630</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>578</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>338</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>259</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>542</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>179</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>144</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>186</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>106</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>539</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>386</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>515</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>625</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>619</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>449</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>229</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>532</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>308</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>166</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>575</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>606</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>215</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>322</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1010</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>242</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>227</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>845</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>902</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>647</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>645</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>346</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>212</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>594</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>336</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>634</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>292</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>185</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>132</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>568</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>511</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>279</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>215</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>233</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>613</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>411</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>407</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>264</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>560</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>540</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>468</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>376</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>543</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>516</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>173</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>430</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1008</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>284</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>464</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>424</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>880</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>451</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>253</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>471</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>536</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>410</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>533</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>271</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>453</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>205</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>165</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>236</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>278</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>140</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>3</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>362</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>572</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>494</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>155</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>485</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1028</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>116</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>188</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>416</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testConstrainedRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>228</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>467</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>518</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>529</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>405</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>175</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>457</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>564</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>565</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>329</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>285</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>632</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>595</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>130</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>408</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>541</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>463</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>176</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>525</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>544</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>370</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>231</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>509</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>200</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1996</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>243</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>553</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>280</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1932</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>447</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2062</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>491</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>297</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testProblemDimensionTooSmall(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1924</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>448</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>438</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2073</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>561</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>275</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>231</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1058</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>240</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>605</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>186</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>setup</mutatedMethod><lineNumber>2404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>638</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testAckley(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>735</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>361</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>822</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>586</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>205</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>576</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>164</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>345</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>611</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>382</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>248</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>456</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>283</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>496</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1882</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>150</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>567</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>608</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>214</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>262</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>202</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>474</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>707</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>258</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>404</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>482</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>460</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>294</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>274</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1045</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>391</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>502</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>374</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>465</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqa</mutatedMethod><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>197</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>211</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>117</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>prelim</mutatedMethod><lineNumber>1714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>393</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>update</mutatedMethod><lineNumber>2328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>450</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2032</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>160</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2066</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>579</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>555</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>587</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>531</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>altmov</mutatedMethod><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>1923</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>445</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testDiffPow(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>1024</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>bobyqb</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>272</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BOBYQAOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BOBYQAOptimizer</mutatedClass><mutatedMethod>trsbox</mutatedMethod><lineNumber>2217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>220</index><killingTest>org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere(org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowVectorLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>455</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>444</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>474</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowVector</mutatedMethod><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>454</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>481</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>362</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>466</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>372</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>438</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>291</index><killingTest>org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math3.linear.SparseRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>475</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>344</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>868</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>395</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>389</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>754</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>390</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>446</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>486</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnVectorLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>145</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>424</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetEntry(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>405</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>376</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>415</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>483</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTrace(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>381</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>284</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>382</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>471</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createMatrix</mutatedMethod><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>733</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>401</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testOverdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>427</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnVector</mutatedMethod><lineNumber>1068</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>433</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>934</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>370</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>487</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>412</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>212</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowVector</mutatedMethod><lineNumber>1034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>341</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>428</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>404</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>416</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1060</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>463</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>359</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>409</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>103</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>305</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>391</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testRUpperTriangular(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>329</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>332</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>393</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>920</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>436</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1026</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>383</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>631</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>430</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>349</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>266</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>425</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>411</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>489</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>450</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>426</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>431</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>449</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>407</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSerial(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>308</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>294</index><killingTest>org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math3.linear.SparseRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>482</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>451</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>264</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>447</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>464</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>470</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>441</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>413</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>630</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testOverdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>406</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>459</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>461</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>453</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><lineNumber>1251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><lineNumber>1257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>375</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>457</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>437</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>460</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>914</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>443</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>864</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testPValueNearZero(org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>456</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>322</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSerial(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>392</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>462</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>417</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnVectorLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>377</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>343</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>468</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>469</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>279</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>260</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><killingTest>org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math3.linear.SparseRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>435</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>442</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testPValueNearZero(org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowVectorLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>339</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>458</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testOverdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1048</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>467</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>480</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAddFail(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>488</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>296</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>386</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>452</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSerial(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>473</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>373</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>815</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1084</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>338</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>668</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><killingTest>org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math3.linear.SparseRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>476</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>317</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>318</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>579</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1056</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnVectorLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>484</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>397</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>303</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>429</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>422</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnVector</mutatedMethod><lineNumber>1070</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>420</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>477</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>346</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>324</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>440</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>402</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>369</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>439</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>146</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>352</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>485</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnVectorLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>448</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>394</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>396</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>336</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>478</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>398</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>445</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetEntry(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant(org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>374</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>418</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>345</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><killingTest>org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply(org.apache.commons.math3.linear.SparseRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getNorm</mutatedMethod><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>340</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testOverdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>906</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>388</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined(org.apache.commons.math3.linear.QRSolverTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getFrobeniusNorm</mutatedMethod><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>479</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>472</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>361</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>403</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>730</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>410</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>698</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>465</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.QRDecompositionTest.testInvertTallSkinny(org.apache.commons.math3.linear.QRDecompositionTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockRealMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>408</index><killingTest>org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk(org.apache.commons.math3.linear.BlockRealMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>424</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>405</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>345</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>291</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>814</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowVector</mutatedMethod><lineNumber>1029</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowVector</mutatedMethod><lineNumber>1031</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>406</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><lineNumber>1261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>305</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>146</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><lineNumber>1267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>389</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>814</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>404</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>422</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>437</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>211</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>429</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>777</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1007</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>381</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>789</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperate(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1014</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>340</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>871</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>372</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>260</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>363</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>254</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>322</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>324</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>394</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>342</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>176</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>810</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testToString(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>391</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>212</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>436</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>407</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>417</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>403</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>420</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>370</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>776</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>332</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>375</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>435</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>373</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>69</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>426</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowVectorLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>386</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>150</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>428</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>907</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>266</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>425</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>135</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>388</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>383</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockWidth</mutatedMethod><lineNumber>1591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>72</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>138</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1051</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>430</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>408</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>321</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>341</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>418</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>374</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>725</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>412</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>20</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>930</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>36</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>935</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>362</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>17</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>134</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1566</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>145</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>317</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>356</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>80</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>140</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>401</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>118</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1072</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>397</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>398</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>303</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>64</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>296</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>84</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>415</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>812</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>359</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>393</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>284</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>369</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>427</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>714</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>13</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowVectorLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>609</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>416</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>346</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>338</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>344</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>132</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>130</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>349</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>907</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>308</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1564</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>413</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>409</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>0</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testToString(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>126</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>853</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>86</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1051</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>396</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarAdd</mutatedMethod><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>939</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAddFail(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>402</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>32</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>318</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>376</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>807</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>410</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>112</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>863</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>148</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>329</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>395</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>102</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>294</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>141</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>55</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>70</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>912</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>851</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>87</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>392</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>221</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createMatrix</mutatedMethod><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>2</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>90</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>31</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumn</mutatedMethod><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>232</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>93</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>scalarMultiply</mutatedMethod><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>343</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testToString(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setEntry</mutatedMethod><lineNumber>1181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>addToEntry</mutatedMethod><lineNumber>1196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>264</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>createBlocksLayout</mutatedMethod><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>377</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>352</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>850</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>594</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>103</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><killingTest/></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnVector</mutatedMethod><lineNumber>1063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>transpose</mutatedMethod><lineNumber>1233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>279</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>339</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>382</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>361</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>2</index><killingTest/></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiplyEntry</mutatedMethod><lineNumber>1212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>3</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowVector</mutatedMethod><lineNumber>1012</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>63</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnVector</mutatedMethod><lineNumber>1044</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>copyBlockPart</mutatedMethod><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>666</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumnMatrix</mutatedMethod><lineNumber>938</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>add</mutatedMethod><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>preMultiply</mutatedMethod><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>96</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><lineNumber>1166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>toBlocksLayout</mutatedMethod><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>4</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>subtract</mutatedMethod><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRowMatrix</mutatedMethod><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getColumn</mutatedMethod><lineNumber>1125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>84</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>336</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRow</mutatedMethod><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>blockHeight</mutatedMethod><lineNumber>1582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>433</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>operate</mutatedMethod><lineNumber>1283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnVector</mutatedMethod><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getRowMatrix</mutatedMethod><lineNumber>848</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>getSubMatrix</mutatedMethod><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>133</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>multiply</mutatedMethod><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setRow</mutatedMethod><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><killingTest/></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInRowOrder</mutatedMethod><lineNumber>1371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>328</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>setColumnMatrix</mutatedMethod><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>127</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>147</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>390</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>BlockFieldMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.BlockFieldMatrix</mutatedClass><mutatedMethod>walkInOptimizedOrder</mutatedMethod><lineNumber>1500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>390</index><killingTest>org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk(org.apache.commons.math3.linear.BlockFieldMatrixTest)</killingTest></mutation>
</mutations>